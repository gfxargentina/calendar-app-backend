{"version":3,"sources":["helpers/fetch.js","types/types.js","helpers/eventsDate.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/ui/Navbar.js","helpers/calendar-messages-es.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","router/PrivateRoute.js","router/PublicRoute.js","router/AppRouter.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","CalendarApp.js","index.js"],"names":["baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","types","eventsDate","events","map","e","end","moment","toDate","start","eventAddNew","event","type","payload","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","checkingFinish","login","user","startLogout","dispatch","clear","logout","useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","useDispatch","logEmail","logPassword","formLoginValues","handleLoginInputChange","regName","regEmail","regPassword","regPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","Navbar","useSelector","state","auth","onClick","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlus1","clone","initEvent","notes","CalendarModal","modalOpen","ui","activeEvent","calendar","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","closeTimeoutMS","style","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","id","console","log","getState","evento","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","eventos","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","view","components","PrivateRoute","isAuthenticated","Component","component","rest","props","to","PublicRoute","AppRouter","checking","exact","path","rootReducer","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a674fec4.chunk.js","sourcesContent":["\r\nconst baseUrl = process.env.REACT_APP_API_URL;\r\n\r\nconst fetchSinToken = ( endpoint, data, method = 'GET') => {\r\n    \r\n    const url =`${ baseUrl }/${ endpoint }`;\r\n\r\n    //si el method es igual a get hacer el fetch al url\r\n    if ( method === 'GET ') {\r\n        return fetch( url );\r\n     \r\n     //si el method no es get, hacer el fetch del metodo mandado, post, put, delete etc   \r\n    }else {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify( data )\r\n        })\r\n    }\r\n}\r\n\r\n\r\nconst fetchConToken = ( endpoint, data, method = 'GET') => {\r\n    \r\n    const url =`${ baseUrl }/${ endpoint }`;\r\n\r\n    //leemos el token del localStorage\r\n    const token = localStorage.getItem('token') || '';\r\n\r\n    //si el method es igual a get hacer el fetch al url\r\n    if ( method === 'GET ') {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'x-token': token\r\n            }\r\n        } );\r\n     \r\n     //si el method no es get, hacer el fetch del metodo mandado, post, put, delete etc   \r\n    }else {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'x-token': token\r\n\r\n            },\r\n            body: JSON.stringify( data )\r\n        })\r\n    }\r\n}\r\n\r\nexport {\r\n    fetchSinToken,\r\n    fetchConToken\r\n}","// para tener todos los tipos de las acciones\r\n\r\nexport const types = {\r\n    uiOpenModal: '[ui] Open modal',\r\n    uiCloseModal: '[ui] Close modal',\r\n\r\n    eventSetActive: '[event] Set Active',\r\n    eventLogout: '[event] Logout clean',\r\n    eventStartAddNew: '[event] Start add new',\r\n    eventAddNew: '[event] Add new',\r\n    eventClearActiveEvent: '[event] Clear active event',\r\n    eventUpdated: '[event] Event updated',\r\n    eventDeleted: '[event] Event deleted',\r\n    eventLoaded: '[event] Events loaded',\r\n\r\n    \r\n    authCheckingFinish: '[auth] Checking finish login state',\r\n    authStartLogin: '[auth] start login state',\r\n    authLogin: '[auth] Login',\r\n    authStartRegister: '[auth] start register',\r\n    authTokenRenew: '[auth] token renew',\r\n    authLogout: '[auth] logout'\r\n\r\n\r\n}","import moment from \"moment\";\r\n\r\n\r\n\r\nexport const eventsDate = ( events = [] ) => {\r\n    //console.log(events);\r\n\r\n    return events.map( (e) => ({\r\n        ...e,\r\n        end: moment( e.end ).toDate(),\r\n        start: moment( e.start ).toDate(),\r\n    }))\r\n};","import Swal from \"sweetalert2\";\r\n\r\nimport { eventsDate } from \"../helpers/eventsDate\";\r\nimport { fetchConToken } from \"../helpers/fetch\";\r\nimport { types } from \"../types/types\";\r\n\r\n\r\n\r\nexport const eventStartAddNew = ( event ) => {\r\n    return async( dispatch, getState ) => {\r\n        //console.log(event);\r\n\r\n        const { uid, name } = getState().auth;\r\n\r\n        try {\r\n            const resp = await fetchConToken('events', event, 'POST');\r\n            const body = await resp.json();\r\n            //console.log(body);\r\n\r\n            if ( body.ok ) {\r\n                event.id = body.evento.id;\r\n                event.user = {\r\n                    _id: uid,\r\n                    name: name\r\n                }\r\n            }\r\n            dispatch( eventAddNew(event) );\r\n\r\n        } catch (error) {\r\n            \r\n        }\r\n\r\n\r\n    }\r\n}\r\n\r\n\r\nconst eventAddNew = (event) => ({\r\n    type: types.eventAddNew,\r\n    payload: event\r\n})\r\n\r\nexport const eventSetActive = (event) => ({\r\n    type: types.eventSetActive,\r\n    payload: event\r\n})\r\n\r\nexport const eventClearActiveEvent = () => ({\r\n    type: types.eventClearActiveEvent\r\n});\r\n\r\n//actualizar evento\r\nexport const eventStartUpdate = ( event ) => {\r\n    return async( dispatch ) => {\r\n        \r\n        try {\r\n            //console.log(event)\r\n            const resp = await fetchConToken(`events/${ event.id }`, event, 'PUT');\r\n            const body = await resp.json();\r\n\r\n            if ( body.ok ) {\r\n                dispatch( eventUpdated( event ) );\r\n                Swal.fire('', 'El evento fue actualizado correctamente', 'success');\r\n            } else {\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n            \r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst eventUpdated = ( event ) => ({\r\n    type: types.eventUpdated,\r\n    payload: event\r\n});\r\n\r\n//borrar un evento\r\nexport const eventStartDelete = () => {\r\n    return async( dispatch, getState ) => {\r\n\r\n        const { id } = getState().calendar.activeEvent;\r\n        \r\n        try {\r\n            //console.log(event)\r\n            const resp = await fetchConToken(`events/${ id }`, {}, 'DELETE');\r\n            const body = await resp.json();\r\n\r\n            if ( body.ok ) {\r\n                dispatch( eventDeleted( id ) );\r\n                Swal.fire('', 'El evento fue borrado correctamente', 'success');\r\n\r\n            } else {\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n            \r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const eventDeleted = () => ({\r\n    type: types.eventDeleted\r\n})\r\n\r\n//muestra los eventos de la BD\r\nexport const eventStartLoading = () => {\r\n    return async(dispatch) => {\r\n        //console.log('eventStartLoading ok');\r\n\r\n        try {\r\n            const resp = await fetchConToken('events');\r\n            const body = await resp.json();\r\n            //console.log(body);\r\n\r\n            const events = eventsDate( body.eventos );\r\n            //console.log(events)\r\n\r\n            dispatch ( eventLoaded( events) );\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n            \r\n        }\r\n    }\r\n}\r\n\r\nconst eventLoaded = (events) => ({\r\n    type: types.eventLoaded,\r\n    payload: events\r\n})\r\n\r\n//limpiar el calendario al salir \r\nexport const eventLogout = () => ({\r\n    type: types.eventLogout\r\n})","import { fetchConToken, fetchSinToken } from \"../helpers/fetch\";\r\nimport { types } from \"../types/types\";\r\nimport Swal from \"sweetalert2\";\r\nimport { eventLogout } from \"./events\";\r\n\r\n\r\n\r\n\r\nexport const startLogin = ( email, password ) => {\r\n    return async(dispatch) => {\r\n       // console.log(email, password)\r\n\r\n       const resp = await fetchSinToken( 'auth', { email, password }, 'POST');\r\n       const body = await resp.json();\r\n       //console.log(body);\r\n\r\n       //si el body.ok = true , grabo el token en el localStorage junto con el dia y la hora\r\n       if ( body.ok ) {\r\n           localStorage.setItem( 'token', body.token );\r\n           localStorage.setItem( 'token-init-date', new Date().getTime() );\r\n\r\n           dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n           }))\r\n       } else {\r\n           Swal.fire('Error', body.msg, 'error');\r\n\r\n       }\r\n    }\r\n}\r\n\r\nexport const startRegister = ( name, email, password ) => {\r\n    return async( dispatch ) => {\r\n        const resp = await fetchSinToken( 'auth/new', { name, email, password }, 'POST');\r\n        const body = await resp.json();\r\n       //console.log(body);\r\n\r\n       //si el body.ok = true , grabo el token en el localStorage junto con el dia y la hora\r\n       if ( body.ok ) {\r\n           localStorage.setItem( 'token', body.token );\r\n           localStorage.setItem( 'token-init-date', new Date().getTime() );\r\n\r\n           dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n           }))\r\n       } else {\r\n           Swal.fire('Error', body.msg, 'error');\r\n\r\n       }\r\n    }\r\n}\r\n\r\nexport const startChecking = () => {\r\n    return async (dispatch) => {\r\n        const resp = await fetchConToken( 'auth/renew');\r\n        const body = await resp.json();\r\n       //console.log(body);\r\n\r\n       //si el body.ok = true , grabo el token en el localStorage junto con el dia y la hora\r\n       if ( body.ok ) {\r\n           localStorage.setItem( 'token', body.token );\r\n           localStorage.setItem( 'token-init-date', new Date().getTime() );\r\n\r\n           dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n           }))\r\n       } else {           \r\n           dispatch( checkingFinish() );\r\n\r\n       }\r\n    }\r\n}\r\n\r\nconst checkingFinish = () => ({\r\n    type: types.authCheckingFinish\r\n})\r\n\r\nconst login = ( user ) => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n})\r\n\r\nexport const startLogout = () => {\r\n    return ( dispatch ) => {\r\n        localStorage.clear();\r\n        dispatch( eventLogout() );\r\n        dispatch( logout() );\r\n\r\n    }\r\n}\r\n\r\nconst logout = () => ({\r\n    type: types.authLogout\r\n})\r\n","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues( initialState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport './login.css';\r\n\r\n\r\n\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();     \r\n\r\n    //login\r\n    const [ formLoginValues, handleLoginInputChange ] = useForm({\r\n        logEmail: 'charly@gmail.com',\r\n        logPassword: '1234567'\r\n    });\r\n\r\n    const { logEmail, logPassword } = formLoginValues;\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        //console.log(formLoginValues);\r\n\r\n        dispatch( startLogin( logEmail, logPassword )  );\r\n    }\r\n\r\n    ///register\r\n    const [ formRegisterValues, handleRegisterInputChange ] = useForm({\r\n        regName: 'luis',\r\n        regEmail: 'charly@gmail.com',\r\n        regPassword: '1234567',\r\n        regPassword2: '1234567'\r\n    });\r\n\r\n    const { regName, regEmail, regPassword, regPassword2 } = formRegisterValues;\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n        //console.log(formRegisterValues);\r\n        if ( regPassword !== regPassword2 ) {\r\n            return Swal.fire('Error', 'Las contraseñas deben de ser iguales', 'error');\r\n        }\r\n\r\n        dispatch( startRegister( regName, regEmail, regPassword )  );\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={ handleLogin }>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"email\"\r\n                                className=\"form-control mb-2\"\r\n                                placeholder=\"Correo\"\r\n                                \r\n                                name=\"logEmail\"\r\n                                value={ logEmail }\r\n                                onChange={ handleLoginInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control mb-2\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"logPassword\"\r\n                                value={ logPassword }\r\n                                onChange={ handleLoginInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\" \r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={ handleRegister }>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control mb-2\"\r\n                                placeholder=\"Nombre\"\r\n                                name=\"regName\"\r\n                                value={ regName }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control mb-2\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"regEmail\"\r\n                                value={ regEmail }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control mb-2\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"regPassword\"\r\n                                value={ regPassword }\r\n                                onChange={ handleRegisterInputChange } \r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control mb-2\"\r\n                                placeholder=\"Repita la contraseña\"\r\n                                name=\"regPassword2\"\r\n                                value={ regPassword2 }\r\n                                onChange={ handleRegisterInputChange } \r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\" \r\n                                className=\"btnSubmit\" \r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../../actions/auth';\r\n\r\n\r\nexport const Navbar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    //useSelector para traer del estado-redux lo que queremos mostrar\r\n    const { name } = useSelector(state => state.auth)\r\n\r\n    const handleLogout = () => {\r\n        dispatch( startLogout() );\r\n    }\r\n\r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-4\" >\r\n            <span className=\"navbar-brand\" >\r\n                { name }\r\n            </span>\r\n\r\n            <button \r\n                className=\"btn btn-outline-danger\" \r\n                onClick={ handleLogout }\r\n                >\r\n                <i className=\"fas fa-sign-out-alt\"></i>\r\n                <span> Salir</span>\r\n            </button>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import React from 'react'\r\n\r\nexport const CalendarEvent = ({event}) => {\r\n    //console.log(event)\r\n    const { title, user } = event;\r\n    return (\r\n        <div>\r\n            <strong>{ title } </strong>\r\n            <span> - { user.name }</span>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\"\r\n\r\n\r\n\r\nexport const uiOpenModal = () => ({\r\n    type: types.uiOpenModal        \r\n})\r\n\r\nexport const uiCloseModal = () => ({\r\n    type: types.uiCloseModal        \r\n})","import React, { useEffect, useState } from 'react'\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport moment from 'moment';\r\nimport Swal from 'sweetalert2';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventStartAddNew, eventStartUpdate } from '../../actions/events';\r\n\r\n\r\nconst customStyles = {\r\n    content : {\r\n      top                   : '50%',\r\n      left                  : '50%',\r\n      right                 : 'auto',\r\n      bottom                : 'auto',\r\n      marginRight           : '-50%',\r\n      transform             : 'translate(-50%, -50%)'\r\n    }\r\n  };\r\n// Make sure to bind modal to your appElement (https://reactcommunity.org/react-modal/accessibility/)\r\nModal.setAppElement('#root');\r\n\r\n\r\nconst now = moment().minutes(0).seconds(0).add(1, 'hours');\r\nconst nowPlus1 = now.clone().add(1, 'hours');\r\n\r\nconst initEvent = {\r\n      title: '',\r\n      notes: '',\r\n      start: now.toDate(),\r\n      end: nowPlus1.toDate()\r\n}\r\n\r\nexport const CalendarModal = () => {\r\n  \r\n    //para usar modalOpen del state de redux ui\r\n    const { modalOpen } = useSelector(state => state.ui)\r\n\r\n    //desestructuracion para usar activeEvent del state de redux calendar\r\n    const { activeEvent } = useSelector( state => state.calendar );\r\n\r\n    //para ejecutar algo del store de redux\r\n    const dispatch = useDispatch();\r\n\r\n    const [ dateStart, setDateStart ] = useState( now.toDate() );\r\n    const [ dateEnd, setDateEnd ] = useState( nowPlus1.toDate() );\r\n    const [ titleValid, setTitleValid ] = useState(true);\r\n\r\n    const [ formValues, setFormValues] = useState( initEvent )\r\n\r\n    const { notes, title, start, end } = formValues;\r\n\r\n    useEffect(() => {\r\n      //console.log(activeEvent);\r\n      if ( activeEvent ) {\r\n        setFormValues( activeEvent );\r\n      } else {\r\n        setFormValues( initEvent );\r\n      }\r\n      \r\n    }, [activeEvent, setFormValues])\r\n\r\n    const handleInputChange = ({ target }) => {\r\n      setFormValues( {\r\n        ...formValues,\r\n        [target.name] : target.value\r\n      })\r\n    }\r\n\r\n\r\n    const closeModal = () => {\r\n        //console.log('cerrando modal');\r\n\r\n        //ejecutamos la accion que viene del uiReducer y la enviamos al store redux\r\n        dispatch( uiCloseModal() );\r\n\r\n        //limpia el evento activo \r\n        dispatch( eventClearActiveEvent() );\r\n        //reestablecer el formulario \r\n        setFormValues( initEvent );\r\n    }\r\n\r\n    const handleStartDateChange = (e) => {\r\n      //console.log(e);\r\n      setDateStart(e);\r\n      setFormValues({\r\n        ...formValues,\r\n        start: e\r\n      })\r\n    }\r\n\r\n    const handleEndDateChange = (e) => {\r\n      //console.log(e);\r\n      setDateEnd(e);\r\n      setFormValues({\r\n        ...formValues,\r\n        end: e\r\n      })\r\n      \r\n    }\r\n\r\n    \r\n    //enviar el formulario\r\n    const handleSubmitForm = (e) => {\r\n        e.preventDefault();\r\n       // console.log( formValues )\r\n       const momentStart = moment( start );\r\n       const momentEnd = moment( end );\r\n       //console.log(momentStart);\r\n       //console.log(momentEnd);\r\n\r\n       if ( momentStart.isSameOrAfter( momentEnd )) {\r\n         return Swal.fire('Error', 'La fecha de fin debe de ser mayor a la fecha de inicio', 'error');\r\n       }\r\n\r\n       if ( title.trim().length < 2) {\r\n         return setTitleValid(false);\r\n       }\r\n\r\n       //realizar grabacion en bd\r\n       //console.log(formValues);\r\n       if ( activeEvent ) {\r\n         dispatch( eventStartUpdate( formValues ) );\r\n       } else {\r\n          dispatch( eventStartAddNew(formValues) );\r\n          \r\n        //datos temporario de ejemplo\r\n        // dispatch( eventAddNew({ \r\n        //   ...formValues,\r\n \r\n        //   \r\n        //   id: new Date().getTime(),\r\n        //   user: {\r\n        //     _id: '123',\r\n        //     name: 'Luis'\r\n        //   }\r\n        // }));\r\n       }\r\n       \r\n\r\n       setTitleValid(true);\r\n       closeModal();\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n          isOpen={ modalOpen }\r\n          //onAfterOpen={afterOpenModal}\r\n          onRequestClose={ closeModal }\r\n          closeTimeoutMS={ 200 }\r\n          style={customStyles}\r\n          className=\"modal\"\r\n          overlayClassName=\"modal-fondo\"\r\n        >\r\n            <h1> { (activeEvent) ? 'Editar evento' : 'Nuevo evento' } </h1>\r\n                <hr />\r\n                <form \r\n                    className=\"container\"\r\n                    onSubmit={ handleSubmitForm }\r\n\r\n                    >\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Fecha y hora inicio</label>\r\n                        <DateTimePicker\r\n                            onChange={ handleStartDateChange }\r\n                            value={ dateStart }\r\n                            className=\"form-control\"\r\n                          />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Fecha y hora fin</label>\r\n                        <DateTimePicker\r\n                            onChange={ handleEndDateChange }\r\n                            value={ dateEnd }\r\n                            className=\"form-control\"\r\n                            minDate={ dateStart }\r\n                          />\r\n                    </div>\r\n\r\n                    <hr />\r\n                    <div className=\"form-group\">\r\n                        <label>Titulo y notas</label>\r\n                        <input \r\n                            type=\"text\" \r\n                            className={` form-control ${ !titleValid && 'is-invalid' }`}\r\n                            placeholder=\"Título del evento\"\r\n                            name=\"title\"\r\n                            autoComplete=\"off\"\r\n                            value={ title }\r\n                            onChange={ handleInputChange }\r\n                        />\r\n                        <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <textarea \r\n                            type=\"text\" \r\n                            className=\"form-control\"\r\n                            placeholder=\"Notas\"\r\n                            rows=\"5\"\r\n                            name=\"notes\"\r\n                            value={ notes }\r\n                            onChange={ handleInputChange }\r\n                        ></textarea>\r\n                        <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n                    </div>\r\n\r\n                    <button\r\n                        type=\"submit\"\r\n                        className=\"btn btn-outline-primary btn-block\"\r\n                    >\r\n                        <i className=\"far fa-save\"></i>\r\n                        <span> Guardar</span>\r\n                    </button>\r\n\r\n                </form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\n\r\n\r\n\r\nexport const AddNewFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleClickNew = () => {\r\n        dispatch( uiOpenModal() );\r\n    }\r\n\r\n    \r\n    return (\r\n        <button\r\n            className=\"btn btn-primary fab\"\r\n            onClick={handleClickNew}\r\n        >\r\n            <i className=\"fas fa-plus\"></i>\r\n        </button>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { eventStartDelete } from '../../actions/events';\r\n\r\n\r\n\r\nexport const DeleteEventFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleDelete = () => {\r\n        dispatch( eventStartDelete() );\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-danger fab-danger\"\r\n            onClick={handleDelete}\r\n        >\r\n            <i className=\"fas fa-trash\"></i>\r\n            <span>Borrar evento</span>\r\n            \r\n        </button>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Navbar } from '../ui/Navbar';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport moment from 'moment';\r\nimport 'moment/locale/es';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport { messages } from '../../helpers/calendar-messages-es';\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { CalendarModal } from './CalendarModal';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventSetActive, eventStartLoading } from '../../actions/events';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\n\r\n\r\nmoment.locale('es');\r\nconst localizer = momentLocalizer(moment) // or globalizeLocalizer\r\n\r\n// //datos de ejemplo\r\n// const events = [{\r\n//     title: 'cumpleaños luis',\r\n//     start: moment().toDate(),\r\n//     end: moment().add(2, 'hours').toDate(),\r\n//     bgcolor: '#fafafa',\r\n//     notes: 'Practicar React',\r\n//     user: {\r\n//         _id: '123',\r\n//         name: 'Luis'\r\n//     }\r\n// }]\r\n\r\nexport const CalendarScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { events, activeEvent } = useSelector(state => state.calendar)\r\n    const { uid } = useSelector(state => state.auth)\r\n\r\n    //para guardar la ultima vista\r\n    const [ lastView, setLastView ] = useState( localStorage.getItem('lastView') || 'month');\r\n\r\n    useEffect(() => {\r\n        dispatch ( eventStartLoading() );\r\n    }, [dispatch])\r\n\r\n    //doble click para mostrar el evento\r\n    const onDoubleClickEvent = (e) => {\r\n        //console.log(e);\r\n        dispatch( uiOpenModal() );\r\n    }\r\n\r\n    //para seleccionar el evento\r\n    const onSelectEvent = (e) => {\r\n        //console.log(e)\r\n        dispatch( eventSetActive(e) );   \r\n    }\r\n\r\n    //para seleccionar la vista mes, semana, dia etc\r\n    const onViewChange = (e) => {\r\n        //console.log(e)\r\n        setLastView(e);\r\n        localStorage.setItem('lastView', e);\r\n    }\r\n\r\n    const onSelectSlot = (e) => {\r\n        dispatch( eventClearActiveEvent() );\r\n    }\r\n\r\n    const eventStyleGetter = ( event, start, end, isSelected ) => {\r\n        //console.log(event, start, end, isSelected)\r\n        const style = {\r\n            backgroundColor: ( uid === event.user._id ) ? '367CF7' : '#465660',\r\n            borderRadius: '0px',\r\n            opacity: 0.8,\r\n            display: 'block',\r\n            //color: 'white'\r\n\r\n        }\r\n\r\n        return {\r\n            style\r\n        }\r\n\r\n    }\r\n    return (\r\n        <div className=\"calendar-screen\" >\r\n            <Navbar />\r\n\r\n            <Calendar\r\n                localizer={localizer}\r\n                events={events}\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                messages={messages}\r\n                eventPropGetter={ eventStyleGetter }\r\n                onDoubleClickEvent={onDoubleClickEvent}\r\n                onSelectEvent={ onSelectEvent }\r\n                onView={ onViewChange }\r\n                onSelectSlot={ onSelectSlot }\r\n                selectable={ true }\r\n                view={ lastView }\r\n                components={{\r\n                    event: CalendarEvent\r\n                }}\r\n                />\r\n\r\n            {\r\n                (activeEvent) && <DeleteEventFab />\r\n            }\r\n                \r\n            <AddNewFab />\r\n            <CalendarModal />    \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n\r\n}) => {\r\n\r\n\r\n    return (\r\n        <Route { ...rest } \r\n            component={ (props) => (\r\n                //si esta autenticado devuelve el componente journalScreen\r\n                //si no devuelve /login\r\n                ( isAuthenticated ) ? <Component {...props} /> : <Redirect to=\"login\" />\r\n            )}\r\n\r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n\r\n}) => {\r\n    return (\r\n        <Route { ...rest } \r\n            component={ (props) => (\r\n                //si esta autenticado lo saco al /,\r\n                // caso contrario devuelve una ruta publica\r\n                ( isAuthenticated ) ? <Redirect to=\"/\"/>  : <Component {...props} />\r\n            )}\r\n\r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect\r\n  } from \"react-router-dom\";\r\nimport { startChecking } from '../actions/auth';\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';  \r\n\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { checking, uid } = useSelector( state => state.auth );\r\n\r\n    useEffect(() => {\r\n        dispatch( startChecking() );\r\n    }, [dispatch])\r\n\r\n    if ( checking ) {\r\n        return ( <h5>Espere...</h5> )\r\n    }\r\n\r\n\r\n    return (\r\n        <Router>\r\n            <div>            \r\n                <Switch>\r\n\r\n                    <PublicRoute \r\n                        exact \r\n                        path=\"/login\" \r\n                        component={ LoginScreen } \r\n                        isAuthenticated= { !!uid }\r\n                        />\r\n\r\n                    <PrivateRoute\r\n                        exact \r\n                        path=\"/\" \r\n                        component={ CalendarScreen } \r\n                        isAuthenticated={ !!uid }\r\n                        />\r\n\r\n                    {/* redirecciona al home si no se encuentra la url */}\r\n                    <Redirect to=\"/\" />\r\n                    \r\n                </Switch>\r\n            </div>\r\n      </Router>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    checking: true\r\n    //uid: null,\r\n    //name: null\r\n\r\n}\r\n\r\nexport const authReducer = ( state = initialState, action ) => {\r\n    switch ( action.type ) {\r\n\r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                checking: false,\r\n                 }\r\n\r\n        case  types.authCheckingFinish:\r\n            return {\r\n                ...state,\r\n                checking: false\r\n            }\r\n\r\n        case types.authLogout:\r\n            return {\r\n                checking: false\r\n            }\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n}","//import moment from 'moment';\r\nimport { types } from '../types/types';\r\n\r\n//datos de ejemplo\r\n// const initialState = {\r\n//     events: [{\r\n//         id: '456789',\r\n//         title: 'cumpleaños luis',\r\n//         start: moment().toDate(),\r\n//         end: moment().add(2, 'hours').toDate(),\r\n//         bgcolor: '#fafafa',\r\n//         notes: 'Practicar React',\r\n//         user: {\r\n//             _id: '123',\r\n//             name: 'Luis'\r\n//         }\r\n//     }\r\n\r\n//     ],\r\n//     activeEvent: null\r\n// }\r\n\r\nconst initialState = {\r\n    events: [],\r\n    activeEvent: null\r\n};\r\n\r\n\r\nexport const calendarReducer = ( state = initialState, action ) => {\r\n    switch ( action.type ) {\r\n\r\n        case types.eventSetActive:\r\n            return {\r\n                ...state,\r\n                activeEvent: action.payload\r\n            }\r\n        \r\n        case types.eventAddNew:\r\n            return {\r\n                ...state,\r\n                events: [\r\n                    ...state.events,\r\n                    action.payload\r\n                ]\r\n            }\r\n        \r\n        case types.eventClearActiveEvent:\r\n            return {\r\n                ...state,\r\n                activeEvent: null\r\n            }\r\n\r\n        case types.eventUpdated:\r\n            return {\r\n                ...state,\r\n                events: state.events.map( \r\n                    e => ( e.id === action.payload.id ) ? action.payload : e\r\n                )\r\n            }\r\n        \r\n        case types.eventDeleted:\r\n            return {\r\n                ...state,\r\n                events: state.events.filter( \r\n                    e => ( e.id !== state.activeEvent.id)\r\n                ),\r\n                activeEvent: null\r\n            }\r\n\r\n        case types.eventLoaded:\r\n            return {\r\n                ...state,\r\n                events: [ ...action.payload ]\r\n            }\r\n\r\n        case types.eventLogout:\r\n            return {\r\n                ...initialState\r\n            }\r\n        \r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    modalOpen: false,\r\n}\r\n\r\nexport const uiReducer = ( state= initialState, action ) => {\r\n    switch ( action.type ) {\r\n        case types.uiOpenModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: true\r\n            }\r\n\r\n        case types.uiCloseModal:\r\n             return {\r\n                 ...state,\r\n                 modalOpen: false\r\n              }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport { authReducer } from \"./authReducer\";\r\nimport { calendarReducer } from \"./calendarReducer\";\r\nimport { uiReducer } from \"./uiReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer\r\n})","import { createStore, compose, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { rootReducer } from \"../reducers/rootReducer\";\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware( thunk )\r\n    )\r\n);\r\n\r\n","import React from 'react'\r\nimport { Provider } from 'react-redux'\r\nimport { AppRouter } from './router/AppRouter'\r\nimport { store } from './store/store'\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <Provider store={ store }>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\nimport './styles.css'\n\n//para ver las variables de entorno\nconsole.log(process.env);\n\n\nReactDOM.render(<CalendarApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}